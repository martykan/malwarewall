extern crate pretty_env_logger;
#[macro_use]
extern crate log;

use async_std::io::ReadExt;
use async_std::task;
use async_tun::result::Result;

mod config;
mod constants;
mod context;
mod data;
mod handlers;
mod net;
mod types;
use config::Config;
use context::AppContext;
use net::init::get_tun_in;
use net::init::get_tun_out;
use net::init::setup_iptables;
use net::tun_handler::create_handlers;

/// Async main function
async fn async_main<'a>() -> Result<()> {
    // Initialize logger
    pretty_env_logger::init();
    // Load config
    let config = Config::load();
    // Initialize context
    let mut ctx = AppContext::new(config);

    // Create tun interfaces
    let tun_in = get_tun_in().await?;
    let tun_out = get_tun_out().await?;
    setup_iptables();

    // Run
    info!("-----------");
    info!(" Running   ");
    info!("-----------");

    create_handlers(&mut ctx, tun_in, tun_out).await?;
    Ok(())
}

fn main() -> Result<()> {
    task::block_on(async_main())
}
